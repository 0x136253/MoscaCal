package com.mutiny.moscacal.pojo;

import java.util.ArrayList;
import java.util.List;

public class ModuleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public ModuleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andModuleIdIsNull() {
            addCriterion("Module_ID is null");
            return (Criteria) this;
        }

        public Criteria andModuleIdIsNotNull() {
            addCriterion("Module_ID is not null");
            return (Criteria) this;
        }

        public Criteria andModuleIdEqualTo(Integer value) {
            addCriterion("Module_ID =", value, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdNotEqualTo(Integer value) {
            addCriterion("Module_ID <>", value, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdGreaterThan(Integer value) {
            addCriterion("Module_ID >", value, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Module_ID >=", value, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdLessThan(Integer value) {
            addCriterion("Module_ID <", value, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdLessThanOrEqualTo(Integer value) {
            addCriterion("Module_ID <=", value, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdIn(List<Integer> values) {
            addCriterion("Module_ID in", values, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdNotIn(List<Integer> values) {
            addCriterion("Module_ID not in", values, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdBetween(Integer value1, Integer value2) {
            addCriterion("Module_ID between", value1, value2, "moduleId");
            return (Criteria) this;
        }

        public Criteria andModuleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Module_ID not between", value1, value2, "moduleId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("Project_ID is null");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("Project_ID is not null");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualTo(Integer value) {
            addCriterion("Project_ID =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualTo(Integer value) {
            addCriterion("Project_ID <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThan(Integer value) {
            addCriterion("Project_ID >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Project_ID >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThan(Integer value) {
            addCriterion("Project_ID <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(Integer value) {
            addCriterion("Project_ID <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIn(List<Integer> values) {
            addCriterion("Project_ID in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotIn(List<Integer> values) {
            addCriterion("Project_ID not in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdBetween(Integer value1, Integer value2) {
            addCriterion("Project_ID between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Project_ID not between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andModuleNameIsNull() {
            addCriterion("Module_Name is null");
            return (Criteria) this;
        }

        public Criteria andModuleNameIsNotNull() {
            addCriterion("Module_Name is not null");
            return (Criteria) this;
        }

        public Criteria andModuleNameEqualTo(String value) {
            addCriterion("Module_Name =", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameNotEqualTo(String value) {
            addCriterion("Module_Name <>", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameGreaterThan(String value) {
            addCriterion("Module_Name >", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameGreaterThanOrEqualTo(String value) {
            addCriterion("Module_Name >=", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameLessThan(String value) {
            addCriterion("Module_Name <", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameLessThanOrEqualTo(String value) {
            addCriterion("Module_Name <=", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameLike(String value) {
            addCriterion("Module_Name like", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameNotLike(String value) {
            addCriterion("Module_Name not like", value, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameIn(List<String> values) {
            addCriterion("Module_Name in", values, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameNotIn(List<String> values) {
            addCriterion("Module_Name not in", values, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameBetween(String value1, String value2) {
            addCriterion("Module_Name between", value1, value2, "moduleName");
            return (Criteria) this;
        }

        public Criteria andModuleNameNotBetween(String value1, String value2) {
            addCriterion("Module_Name not between", value1, value2, "moduleName");
            return (Criteria) this;
        }

        public Criteria andFunctionIsNull() {
            addCriterion("Function is null");
            return (Criteria) this;
        }

        public Criteria andFunctionIsNotNull() {
            addCriterion("Function is not null");
            return (Criteria) this;
        }

        public Criteria andFunctionEqualTo(String value) {
            addCriterion("Function =", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionNotEqualTo(String value) {
            addCriterion("Function <>", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionGreaterThan(String value) {
            addCriterion("Function >", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionGreaterThanOrEqualTo(String value) {
            addCriterion("Function >=", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionLessThan(String value) {
            addCriterion("Function <", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionLessThanOrEqualTo(String value) {
            addCriterion("Function <=", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionLike(String value) {
            addCriterion("Function like", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionNotLike(String value) {
            addCriterion("Function not like", value, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionIn(List<String> values) {
            addCriterion("Function in", values, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionNotIn(List<String> values) {
            addCriterion("Function not in", values, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionBetween(String value1, String value2) {
            addCriterion("Function between", value1, value2, "function");
            return (Criteria) this;
        }

        public Criteria andFunctionNotBetween(String value1, String value2) {
            addCriterion("Function not between", value1, value2, "function");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("Description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("Description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("Description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("Description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("Description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("Description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("Description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("Description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("Description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("Description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("Description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("Description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("Description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("Description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andParamNumberIsNull() {
            addCriterion("Param_Number is null");
            return (Criteria) this;
        }

        public Criteria andParamNumberIsNotNull() {
            addCriterion("Param_Number is not null");
            return (Criteria) this;
        }

        public Criteria andParamNumberEqualTo(Integer value) {
            addCriterion("Param_Number =", value, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberNotEqualTo(Integer value) {
            addCriterion("Param_Number <>", value, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberGreaterThan(Integer value) {
            addCriterion("Param_Number >", value, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("Param_Number >=", value, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberLessThan(Integer value) {
            addCriterion("Param_Number <", value, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberLessThanOrEqualTo(Integer value) {
            addCriterion("Param_Number <=", value, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberIn(List<Integer> values) {
            addCriterion("Param_Number in", values, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberNotIn(List<Integer> values) {
            addCriterion("Param_Number not in", values, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberBetween(Integer value1, Integer value2) {
            addCriterion("Param_Number between", value1, value2, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andParamNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("Param_Number not between", value1, value2, "paramNumber");
            return (Criteria) this;
        }

        public Criteria andIsCalculateIsNull() {
            addCriterion("Is_Calculate is null");
            return (Criteria) this;
        }

        public Criteria andIsCalculateIsNotNull() {
            addCriterion("Is_Calculate is not null");
            return (Criteria) this;
        }

        public Criteria andIsCalculateEqualTo(Boolean value) {
            addCriterion("Is_Calculate =", value, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateNotEqualTo(Boolean value) {
            addCriterion("Is_Calculate <>", value, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateGreaterThan(Boolean value) {
            addCriterion("Is_Calculate >", value, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("Is_Calculate >=", value, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateLessThan(Boolean value) {
            addCriterion("Is_Calculate <", value, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateLessThanOrEqualTo(Boolean value) {
            addCriterion("Is_Calculate <=", value, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateIn(List<Boolean> values) {
            addCriterion("Is_Calculate in", values, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateNotIn(List<Boolean> values) {
            addCriterion("Is_Calculate not in", values, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateBetween(Boolean value1, Boolean value2) {
            addCriterion("Is_Calculate between", value1, value2, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsCalculateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("Is_Calculate not between", value1, value2, "isCalculate");
            return (Criteria) this;
        }

        public Criteria andIsDefaultIsNull() {
            addCriterion("Is_Default is null");
            return (Criteria) this;
        }

        public Criteria andIsDefaultIsNotNull() {
            addCriterion("Is_Default is not null");
            return (Criteria) this;
        }

        public Criteria andIsDefaultEqualTo(Boolean value) {
            addCriterion("Is_Default =", value, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotEqualTo(Boolean value) {
            addCriterion("Is_Default <>", value, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultGreaterThan(Boolean value) {
            addCriterion("Is_Default >", value, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultGreaterThanOrEqualTo(Boolean value) {
            addCriterion("Is_Default >=", value, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultLessThan(Boolean value) {
            addCriterion("Is_Default <", value, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultLessThanOrEqualTo(Boolean value) {
            addCriterion("Is_Default <=", value, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultIn(List<Boolean> values) {
            addCriterion("Is_Default in", values, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotIn(List<Boolean> values) {
            addCriterion("Is_Default not in", values, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultBetween(Boolean value1, Boolean value2) {
            addCriterion("Is_Default between", value1, value2, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotBetween(Boolean value1, Boolean value2) {
            addCriterion("Is_Default not between", value1, value2, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsUserfulIsNull() {
            addCriterion("Is_Userful is null");
            return (Criteria) this;
        }

        public Criteria andIsUserfulIsNotNull() {
            addCriterion("Is_Userful is not null");
            return (Criteria) this;
        }

        public Criteria andIsUserfulEqualTo(Boolean value) {
            addCriterion("Is_Userful =", value, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulNotEqualTo(Boolean value) {
            addCriterion("Is_Userful <>", value, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulGreaterThan(Boolean value) {
            addCriterion("Is_Userful >", value, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulGreaterThanOrEqualTo(Boolean value) {
            addCriterion("Is_Userful >=", value, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulLessThan(Boolean value) {
            addCriterion("Is_Userful <", value, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulLessThanOrEqualTo(Boolean value) {
            addCriterion("Is_Userful <=", value, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulIn(List<Boolean> values) {
            addCriterion("Is_Userful in", values, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulNotIn(List<Boolean> values) {
            addCriterion("Is_Userful not in", values, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulBetween(Boolean value1, Boolean value2) {
            addCriterion("Is_Userful between", value1, value2, "isUserful");
            return (Criteria) this;
        }

        public Criteria andIsUserfulNotBetween(Boolean value1, Boolean value2) {
            addCriterion("Is_Userful not between", value1, value2, "isUserful");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdIsNull() {
            addCriterion("DefaultModule_ID is null");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdIsNotNull() {
            addCriterion("DefaultModule_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdEqualTo(Integer value) {
            addCriterion("DefaultModule_ID =", value, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdNotEqualTo(Integer value) {
            addCriterion("DefaultModule_ID <>", value, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdGreaterThan(Integer value) {
            addCriterion("DefaultModule_ID >", value, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("DefaultModule_ID >=", value, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdLessThan(Integer value) {
            addCriterion("DefaultModule_ID <", value, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdLessThanOrEqualTo(Integer value) {
            addCriterion("DefaultModule_ID <=", value, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdIn(List<Integer> values) {
            addCriterion("DefaultModule_ID in", values, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdNotIn(List<Integer> values) {
            addCriterion("DefaultModule_ID not in", values, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdBetween(Integer value1, Integer value2) {
            addCriterion("DefaultModule_ID between", value1, value2, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andDefaultmoduleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("DefaultModule_ID not between", value1, value2, "defaultmoduleId");
            return (Criteria) this;
        }

        public Criteria andTfunctionIsNull() {
            addCriterion("TFunction is null");
            return (Criteria) this;
        }

        public Criteria andTfunctionIsNotNull() {
            addCriterion("TFunction is not null");
            return (Criteria) this;
        }

        public Criteria andTfunctionEqualTo(String value) {
            addCriterion("TFunction =", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionNotEqualTo(String value) {
            addCriterion("TFunction <>", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionGreaterThan(String value) {
            addCriterion("TFunction >", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionGreaterThanOrEqualTo(String value) {
            addCriterion("TFunction >=", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionLessThan(String value) {
            addCriterion("TFunction <", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionLessThanOrEqualTo(String value) {
            addCriterion("TFunction <=", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionLike(String value) {
            addCriterion("TFunction like", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionNotLike(String value) {
            addCriterion("TFunction not like", value, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionIn(List<String> values) {
            addCriterion("TFunction in", values, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionNotIn(List<String> values) {
            addCriterion("TFunction not in", values, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionBetween(String value1, String value2) {
            addCriterion("TFunction between", value1, value2, "tfunction");
            return (Criteria) this;
        }

        public Criteria andTfunctionNotBetween(String value1, String value2) {
            addCriterion("TFunction not between", value1, value2, "tfunction");
            return (Criteria) this;
        }

        public Criteria andChangefunIsNull() {
            addCriterion("ChangeFun is null");
            return (Criteria) this;
        }

        public Criteria andChangefunIsNotNull() {
            addCriterion("ChangeFun is not null");
            return (Criteria) this;
        }

        public Criteria andChangefunEqualTo(String value) {
            addCriterion("ChangeFun =", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunNotEqualTo(String value) {
            addCriterion("ChangeFun <>", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunGreaterThan(String value) {
            addCriterion("ChangeFun >", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunGreaterThanOrEqualTo(String value) {
            addCriterion("ChangeFun >=", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunLessThan(String value) {
            addCriterion("ChangeFun <", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunLessThanOrEqualTo(String value) {
            addCriterion("ChangeFun <=", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunLike(String value) {
            addCriterion("ChangeFun like", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunNotLike(String value) {
            addCriterion("ChangeFun not like", value, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunIn(List<String> values) {
            addCriterion("ChangeFun in", values, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunNotIn(List<String> values) {
            addCriterion("ChangeFun not in", values, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunBetween(String value1, String value2) {
            addCriterion("ChangeFun between", value1, value2, "changefun");
            return (Criteria) this;
        }

        public Criteria andChangefunNotBetween(String value1, String value2) {
            addCriterion("ChangeFun not between", value1, value2, "changefun");
            return (Criteria) this;
        }

        public Criteria andKeyfileidIsNull() {
            addCriterion("KeyFileId is null");
            return (Criteria) this;
        }

        public Criteria andKeyfileidIsNotNull() {
            addCriterion("KeyFileId is not null");
            return (Criteria) this;
        }

        public Criteria andKeyfileidEqualTo(Integer value) {
            addCriterion("KeyFileId =", value, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidNotEqualTo(Integer value) {
            addCriterion("KeyFileId <>", value, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidGreaterThan(Integer value) {
            addCriterion("KeyFileId >", value, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidGreaterThanOrEqualTo(Integer value) {
            addCriterion("KeyFileId >=", value, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidLessThan(Integer value) {
            addCriterion("KeyFileId <", value, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidLessThanOrEqualTo(Integer value) {
            addCriterion("KeyFileId <=", value, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidIn(List<Integer> values) {
            addCriterion("KeyFileId in", values, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidNotIn(List<Integer> values) {
            addCriterion("KeyFileId not in", values, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidBetween(Integer value1, Integer value2) {
            addCriterion("KeyFileId between", value1, value2, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andKeyfileidNotBetween(Integer value1, Integer value2) {
            addCriterion("KeyFileId not between", value1, value2, "keyfileid");
            return (Criteria) this;
        }

        public Criteria andMultnumIsNull() {
            addCriterion("multNum is null");
            return (Criteria) this;
        }

        public Criteria andMultnumIsNotNull() {
            addCriterion("multNum is not null");
            return (Criteria) this;
        }

        public Criteria andMultnumEqualTo(Integer value) {
            addCriterion("multNum =", value, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumNotEqualTo(Integer value) {
            addCriterion("multNum <>", value, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumGreaterThan(Integer value) {
            addCriterion("multNum >", value, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("multNum >=", value, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumLessThan(Integer value) {
            addCriterion("multNum <", value, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumLessThanOrEqualTo(Integer value) {
            addCriterion("multNum <=", value, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumIn(List<Integer> values) {
            addCriterion("multNum in", values, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumNotIn(List<Integer> values) {
            addCriterion("multNum not in", values, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumBetween(Integer value1, Integer value2) {
            addCriterion("multNum between", value1, value2, "multnum");
            return (Criteria) this;
        }

        public Criteria andMultnumNotBetween(Integer value1, Integer value2) {
            addCriterion("multNum not between", value1, value2, "multnum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Module
     *
     * @mbg.generated do_not_delete_during_merge 2020-03-17 17:46:15
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Module
     *
     * @mbg.generated 2020-03-17 17:46:15
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}